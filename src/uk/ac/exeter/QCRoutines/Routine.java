package uk.ac.exeter.QCRoutines;

import java.util.ArrayList;
import java.util.List;

import uk.ac.exeter.QCRoutines.data.DataRecord;
import uk.ac.exeter.QCRoutines.data.DataRecordException;
import uk.ac.exeter.QCRoutines.messages.Message;

/**
 * The base class for a Sanity Check routine. These classes will be called
 * to sanity check the data after it's been read and processed for missing/
 * out of range values.
 */
public abstract class Routine {

	/**
	 * The list of error/warning messages generated by this checker
	 */
	protected List<Message> messages;
	
	/**
	 * Base constructor - initialises message list
	 */
	public Routine() {
		messages = new ArrayList<Message>();
	}
	
	/**
	 * Initialise the checker and check that the supplied fields are valid
	 * @param parameters The parameters for the sanity check
	 * @throws RoutineException
	 */
	public abstract void initialise(List<String> parameters) throws RoutineException;
	
	/**
	 * Processes a single record from the input data file.
	 * These sanity checkers will be passed each record in turn.
	 * @param messages The output messages
	 * @param record The record
	 */
	public abstract void processRecords(List<DataRecord> records) throws RoutineException;
	
	/**
	 * Returns the list of messages generated by this checker
	 * @return The list of messages generated by this checker
	 */
	public List<Message> getMessages() {
		return messages;
	}
	
	public void addMessage(Message message, DataRecord record) throws DataRecordException {
		messages.add(message);
		record.addMessage(message);
	}
}
