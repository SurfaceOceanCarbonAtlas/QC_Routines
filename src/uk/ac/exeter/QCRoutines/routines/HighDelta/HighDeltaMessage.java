package uk.ac.exeter.QCRoutines.routines.HighDelta;

import java.util.TreeSet;

import uk.ac.exeter.QCRoutines.data.DataColumn;
import uk.ac.exeter.QCRoutines.messages.Flag;
import uk.ac.exeter.QCRoutines.messages.Message;
import uk.ac.exeter.QCRoutines.messages.MessageException;
import uk.ac.exeter.QCRoutines.messages.RebuildCode;

/**
 * Class for messages generated by the High Delta QC Routine.
 * @author Steve Jones
 * @see HighDeltaRoutine
 */
public class HighDeltaMessage extends Message {

	/**
	 * Constructor for reconstructing a message object from a {@link RebuildCode}.
	 * @param lineNumber The line number for which the message was raised
	 * @param columnIndices The column indices to which the the message relates
	 * @param columnNames The column names to which the message relates
	 * @param flag The flag for the message
	 * @param fieldValue The field value(s) that triggered the message
	 * @param validValue An example of a valid value 
	 * @see RebuildCode#getMessage()
	 */
	public HighDeltaMessage(long lineNumber, TreeSet<Integer> columnIndices, TreeSet<String> columnNames, Flag flag, String fieldValue, String validValue) {
		super(lineNumber, columnIndices, columnNames, flag, fieldValue, validValue);
	}

	/**
	 * The main message constructor. The flag for the message is always {@link Flag#BAD}.
	 * @param lineNumber The line number for which the message was raised
	 * @param dataColumn The column to which the message relates
	 * @param recordDelta The delta between the value in this record and the value in the previous record, in units per minute.
	 * @param maxDelta The maximum allowable delta between records, in units per minute.
	 * @throws MessageException If an error occurs while constructing the message
	 */
	public HighDeltaMessage(long lineNumber, DataColumn dataColumn, double recordDelta, double maxDelta) throws MessageException {
		super(lineNumber, dataColumn, Flag.BAD, String.valueOf(recordDelta), String.valueOf(maxDelta));
	}

	@Override
	public String getFullMessage() {
		return getColumnNamesAsString() + " changed by " + fieldValue + " per minute - max is " + validValue + " per minute";
	}

	@Override
	public String getShortMessage() {
		return getColumnNamesAsString() + " changes too quickly";
	}

}
